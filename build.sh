#!/bin/bash
set -e

if [ ! -f /workspace/config ]; then
	echo "Missing /workspace/config"
	exit -1
fi
. /workspace/config

COMMITTER_NAME=${COMMITTER_NAME:?"COMMITTER_NAME is not set"}
COMMITTER_EMAIL=${COMMITTER_EMAIL:?"COMITTER_EMAIL is not set"}
RELEASE_DATE=${RELEASE_DATE:-`date +%Y-%m-%d -d '+2 days'`}
RELEASE_BRANCH=${RELEASE_BRANCH:?"RELEASE_BRANCH is not set"}
RELEASE_VERSION=${RELEASE_VERSION:?"RELEASE_VERSION is not set"}

# Translate version
VERSION_MAJOR=$(echo "$RELEASE_VERSION" | cut -d "." -f 1)
VERSION_MINOR=$(echo "$RELEASE_VERSION" | cut -d "." -f 2)
VERSION_PATCH=$(echo "$RELEASE_VERSION" | cut -d "." -f 3 | egrep -o "[0-9]+" | head -n 1)
POINT_RELEASE_BRANCH="PHP-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}"
if [ "$VERSION_PATCH" != "$(echo $1 | cut -d '.' -f 3)" ]; then
	# This is an alpha/beta/RC
	OFFSET=$((${#VERSION_PATCH}+1))
	VERSION_EXTRA=$(echo "$RELEASE_VERSION" | cut -d "." -f 3 | cut -c "$OFFSET"-)
fi
VERSION_ID=$(($((VERSION_MAJOR*10000))+$((VERSION_MINOR*100))+$((VERSION_PATCH+0))))

# Clean up workspace
cd /workspace
rm -rf php-src
rm -f  log/{config,make,tests}.{debug-,}[nz]ts

# Clone from github (public readable),
# Configure commiter,
# then update branch to git.php.net
cd /workspace
git clone --depth="${CLONE_DEPTH:-1000}" git://github.com/php/php-src

cd /workspace/php-src
git rev-parse -q --verify "$RELEASE_BRANCH" > /dev/null || (
	echo "$RELEASE_BRANCH does not exist in php-src"
	exit 1
)

if [[ "$VERSION_EXTRA" == alpha* ]]; then
	git rev-parse -q --verify "$POINT_RELEASE_BRANCH" > /dev/null && (
		echo "Building alpha, but $POINT_RELEASE_BRANCH already exists"
		exit 1
	) || true
else
	git rev-parse -q --verify "$POINT_RELEASE_BRANCH" > /dev/null || (
		echo "Cutting $POINT_RELEASE_BRANCH from $RELEASE_BRANCH"
		git branch "$POINT_RELEASE_BRANCH" "$RELEASE_BRANCH"
	)
	RELEASE_BRANCH=$POINT_RELEASE_BRANCH
fi
echo "Building $RELEASE_VERSION from $RELEASE_BRANCH"
git checkout "$RELEASE_BRANCH"
git config user.name "$COMMITTER_NAME"
git config user.email "$COMMITTER_EMAIL"
git remote set-url origin git@git.php.net:php-src.git

# Update CREDITS
cd /workspace/php-src
scripts/dev/credits
CREDITS=""
if [ ! -z "$(git diff ext/standard/credits_{ext,sapi}.h)" ]; then
	CREDITS="/CREDITS"
	git add ext/standard/credits_{ext,sapi}.h
fi

# Update main/php_version.h
cd /workspace/php-src
echo \
"/* automatically generated by configure */
/* edit configure.ac to change version number */
#define PHP_MAJOR_VERSION $VERSION_MAJOR
#define PHP_MINOR_VERSION $VERSION_MINOR
#define PHP_RELEASE_VERSION $VERSION_PATCH
#define PHP_EXTRA_VERSION \"$VERSION_EXTRA\"
#define PHP_VERSION \"$RELEASE_VERSION\"
#define PHP_VERSION_ID $VERSION_ID" > main/php_version.h
git add main/php_version.h

# Update configure.ac
cd /workspace/php-src
sed -i \
	-e "s/^PHP_MAJOR_VERSION=[0-9]\+$/PHP_MAJOR_VERSION=$VERSION_MAJOR/g" \
	-e "s/^PHP_MINOR_VERSION=[0-9]\+$/PHP_MINOR_VERSION=$VERSION_MINOR/g" \
	-e "s/^PHP_RELEASE_VERSION=[0-9]\+$/PHP_RELEASE_VERSION=$VERSION_PATCH/g" \
	-e "s/^PHP_EXTRA_VERSION=\".\+\"$/PHP_EXTRA_VERSION=\"$VERSION_EXTRA\"/g" \
	configure.ac
git add configure.ac

# Update NEWS
cd /workspace/php-src
sed -i \
	-e "s/?? ??? \(????\|[0-9]\{4\}\)/$(date -d ${RELEASE_DATE} '+%d %b %Y')/g" \
	NEWS
git add NEWS

# commit
cd /workspace/php-src
git commit -m "Update versions/dates$CREDITS for PHP ${RELEASE_VERSION}"
TAG_COMMIT=$(git rev-parse HEAD)
git show | cat -

########

make_test() {
	LOGEXT="nts"
	if [ "$2" -eq 1 ]; then
		LOGEXT="zts"
	fi
	if [ "$1" -eq 1 ]; then
		LOGEXT="debug-$LOGEXT"
	fi
	echo "----------------------"
	echo "Building PHP $LOGEXT"

	# Build PHP
	mkdir -p /workspace/log
	cd /workspace/php-src
	git clean -xfdq
	ENABLE_DEBUG=${1:?"DEBUG opt not specific"} \
	ENABLE_MAINTAINER_ZTS=${2:?"ZTS opt not specified"} \
	CONFIG_LOG_FILE=/workspace/log/config.$LOGEXT \
	MAKE_LOG_FILE=/workspace/log/make.$LOGEXT \
		travis/compile.sh 2> /dev/null
	BUILT_VERSION=$(./sapi/cli/php -n -v | head -n 1 | cut -d " " -f 2)
	if [ "$BUILT_VERSION" != "$RELEASE_VERSION" ]; then
	  echo "**Panic: RELEASE_VERSION=${RELEASE_VERSION}, but BUILT_VERSION=${BUILT_VERSION}"
	  exit 1
	fi

	# Run tests
	mkdir -p /workspace/log
	cd /workspace/php-src
	REPORT_EXIT_STATUS=${ABORT_ON_TEST_FAILURES:-1} \
	sapi/cli/php run-tests.php \
		-p "$(pwd)/sapi/cli/php" -q -s /workspace/log/tests.$LOGEXT \
		--offline --set-timeout 120
}
if [ -z "$DEBUG_ZTS_ONLY" ]; then
	make_test 0 0
	make_test 0 1
	make_test 1 0
fi
make_test 1 1

# Make tarballs/stubs and relocate them
cd /workspace/php-src
echo "-----------------"
echo "Bundling tarballs"
git tag "php-$RELEASE_VERSION" "$TAG_COMMIT"
PHPROOT=. ./makedist "$RELEASE_VERSION"
git tag -d "php-$RELEASE_VERSION"

# Update NEWS (if requested)
cd /workspace/php-src
if [ ! -z "$RELEASE_NEXT" ]; then
	sed -i \
		-e "3s/^/?? ??? ????, PHP ${RELEASE_NEXT}\n\n\n/" \
		NEWS
	git add NEWS
	git commit -m "Update NEWS for ${RELEASE_NEXT}"
fi

# Output finalization instructions
echo "-----------------"
echo "Tarballs prepared"
for COMP in gz bz2 xz; do
	echo "workspace/php-src/php-$RELEASE_VERSION.tar.$COMP"
	echo -n "md5:    "
	md5sum "/workspace/php-src/php-$RELEASE_VERSION.tar.$COMP" | cut -d ' ' -f 1
	echo -n "sha256: "
	sha256sum "/workspace/php-src/php-$RELEASE_VERSION.tar.$COMP" | cut -d ' ' -f 1
done
echo ""

echo "Run the following commands in workspace/php-src once you've confirmed the release looks good:"
echo ""
echo "$ git tag -u '${GPG_KEY:-YOUR_GPG_KEY}' 'php-${RELEASE_VERSION}' -m 'Tag for php ${RELEASE_VERSION}' $TAG_COMMIT"
echo -n "$ git push origin "
echo "'$RELEASE_BRANCH' 'php-$RELEASE_VERSION'"
for COMP in gz bz2 xz; do
	echo "$ gpg -u ${GPG_USER:-$COMMITTER_EMAIL} --armor --detach-sign php-$RELEASE_VERSION.tar.$COMP"
done
echo ""

echo "Make the tarballs available for testing:"
echo "1. Copy workspace/php-src/php-$RELEASE_VERSION.tar.{gz,bz2,xz}{,.asc} to downloads.php.net:/home/\$USER/public_html/"
echo "2. Contact internals-win@lists.php.net for Windows build creation"
if [ -z "$VERSION_EXTRA" ]; then
	echo "3. This appears to be a release build.  Reference README.RELEASE_PROCESS for further instruction."
fi
echo ""
